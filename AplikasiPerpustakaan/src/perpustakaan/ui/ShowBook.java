/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package perpustakaan.ui;


//import all depedencies
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import perpustakaan.helper.CheckConnection;

//import class
import perpustakaan.helper.ConnectionHelper;
import perpustakaan.model.Buku;
import perpustakaan.model.BukuManager;

/**
 *
 * @author CodeVector
 */
public class ShowBook extends javax.swing.JFrame {

    //Dekalrasi variable
    public static DefaultTableModel tableModel;
    public static List<Buku>  listBuku;
    
    public ShowBook() {
        initComponents();
        
        //Setting untuk memposisikan windos ketengah layar
        setLocationRelativeTo(null);
        
        //Memanggil method
        initTableBook();
        loadBook();   
//        validateExit();
    }        
    
    private void validateExit(){
        ShowBook.this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                if(JOptionPane.showConfirmDialog(ShowBook.this, "Apakah anda ingin keluar?", 
                        "Peringatan", 
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                    System.exit(0);
                }
            }             
        });
    }
    
    private void initTableBook(){
        //Deklarasi array bookColumns tipe data String
        String[] bookColumns = new String[]{
            "ID", "Judul", "Pengarang", "Penerbit", "Tahun Terbiy"
        };
        
        //Deklarasi array columWidth tipe data int
        int[] columnWidth = {70, 190, 210, 90, 90};
        
        
        //Deklarasi tableModel 
        tableModel = new  DefaultTableModel(bookColumns, 0);
        
        //Set table model
        bookTable.setModel(tableModel);
        
        //set jumlah baris table
        bookTable.setRowHeight(20);
                
        int i= 0;
        for(int width : columnWidth){
            //set column bookTable
            TableColumn column = bookTable.getColumnModel().getColumn(i++);
            
            //set lebar table
            column.setMaxWidth(width);            
            column.setPreferredWidth(width);
        }
    }
    
    //Method untuk memuat data buku
    public static void loadBook(){
        
        //Deklarasi arrayList
        listBuku = new ArrayList<>();
        
        //lalu nilainya adalah return nilai dari method showAllBook
        listBuku = BukuManager.showAllBook();
        
        //set unutk jumlah baris menjadi 0
        tableModel.setRowCount(0);
        
        //Melakukan perulangan untuk memasukkan data buku
        //pada baris table daftar buku
        listBuku.forEach(buku -> {
            tableModel.addRow(new Object[]{
                buku.getId_buku(),
                buku.getJudul_buku(),
                buku.getPengarang(),
                buku.getPenerbit(),
                buku.getTahun_terbit()
            });
        });
    }
    
    public void showMessage(String message, int type){
        if(type == 1){
            JOptionPane.showMessageDialog(this, message, "Sukses", JOptionPane.INFORMATION_MESSAGE);                    
        }else{
            JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);                    
        }
    }
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rootPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();
        refreshBookBtn = new javax.swing.JButton();
        addBookBtn = new javax.swing.JButton();
        updateBookBtn = new javax.swing.JButton();
        deleteBookBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Daftar Buku");
        jLabel1.setToolTipText("");

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID Buku", "Judul Buku", "Pengarang", "Penerbit", "Tahun Terbit"
            }
        ));
        bookTable.setPreferredSize(new java.awt.Dimension(452, 402));
        jScrollPane1.setViewportView(bookTable);

        refreshBookBtn.setText("Refresh");

        addBookBtn.setText("Add");
        addBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookBtnActionPerformed(evt);
            }
        });

        updateBookBtn.setText("Update");
        updateBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBookBtnActionPerformed(evt);
            }
        });

        deleteBookBtn.setText("Delete");
        deleteBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBookBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rootPanelLayout = new javax.swing.GroupLayout(rootPanel);
        rootPanel.setLayout(rootPanelLayout);
        rootPanelLayout.setHorizontalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addGroup(rootPanelLayout.createSequentialGroup()
                        .addComponent(refreshBookBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateBookBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBookBtn)))
                .addContainerGap())
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addGap(250, 250, 250)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rootPanelLayout.setVerticalGroup(
            rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rootPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(rootPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshBookBtn)
                    .addComponent(addBookBtn)
                    .addComponent(updateBookBtn)
                    .addComponent(deleteBookBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rootPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookBtnActionPerformed
        new AddBook().setVisible(true);        
    }//GEN-LAST:event_addBookBtnActionPerformed

    private void updateBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBookBtnActionPerformed
        int selectedRow = bookTable.getSelectedRow();
        if(selectedRow == -1){
            showMessage("Pilih baris dulu", 2);
        }else{
            Buku buku = listBuku.get(selectedRow);
            ShowBook.this.setVisible(false);
            new AddBook("Update Buku", Integer.parseInt(buku.getId_buku())).setVisible(true);
        }
    }//GEN-LAST:event_updateBookBtnActionPerformed

    private void deleteBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookBtnActionPerformed
        try{
        int selectedRow = bookTable.getSelectedRow();
        if(selectedRow == -1){
            showMessage("pilih baris dulu", 2);
        }else{            
            int pilihan = JOptionPane.showConfirmDialog(this, "Apakah anda yakin "
                    + "akan menghapus data ini ?", "Konfirmasi", JOptionPane.WARNING_MESSAGE);
                    if(pilihan == JOptionPane.YES_OPTION){
                 Connection conn = ConnectionHelper.getConnection();
                 Statement stm = conn.createStatement();
                 Buku buku = listBuku.get(selectedRow);
                 stm.executeUpdate("DELETE FROM buku WHERE id = " + buku.getId_buku());
                 loadBook();
            }else{
                System.out.println("Salah");
            }
        }
        }catch(SQLException ex){
            System.out.println("Error: "+ ex.getMessage());
        }
    }//GEN-LAST:event_deleteBookBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBookBtn;
    private javax.swing.JTable bookTable;
    private javax.swing.JButton deleteBookBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBookBtn;
    private javax.swing.JPanel rootPanel;
    private javax.swing.JButton updateBookBtn;
    // End of variables declaration//GEN-END:variables
}
